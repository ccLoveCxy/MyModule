
pluginManagement {
    repositories {
        google {
            content {
                includeGroupByRegex("com\\.android.*")
                includeGroupByRegex("com\\.google.*")
                includeGroupByRegex("androidx.*")
            }
        }
        mavenCentral()
        gradlePluginPortal()
        maven { url = uri("https://www.jitpack.io") }
        maven { url=uri ("https://www.jitpack.io")}
        maven { url=uri ("https://maven.aliyun.com/repository/releases")}
        maven { url=uri ("https://maven.aliyun.com/repository/google")}
        maven { url=uri ("https://maven.aliyun.com/repository/central")}
        maven { url=uri ("https://maven.aliyun.com/repository/gradle-plugin")}
        maven { url=uri ("https://maven.aliyun.com/repository/public")}
    }
}
dependencyResolutionManagement {
//    RepositoriesMode，包含三个取值：
//    1.  PREFER_PROJECT：表示优先使用当前项目中指定的仓库。
//    2.  PREFER_SETTINGS：表示优先使用在 Gradle 设置文件 (settings.gradle) 中指定的仓库。
//    3.  FAIL_ON_PROJECT_REPOS：表示只使用明确声明的仓库，不允许使用当前项目的仓库。
//    这个枚举类型被标记为 @Incubating，表示这是一个孵化阶段的功能，在将来版本中可能会有所变化。
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven { url = uri("https://www.jitpack.io") }
        maven { url=uri ("https://www.jitpack.io")}
        maven { url=uri ("https://maven.aliyun.com/repository/releases")}
        maven { url=uri ("https://maven.aliyun.com/repository/google")}
        maven { url=uri ("https://maven.aliyun.com/repository/central")}
        maven { url=uri ("https://maven.aliyun.com/repository/gradle-plugin")}
        maven { url=uri ("https://maven.aliyun.com/repository/public")}
    }
}

rootProject.name = "MyModule"
include ':app',':module_base'

